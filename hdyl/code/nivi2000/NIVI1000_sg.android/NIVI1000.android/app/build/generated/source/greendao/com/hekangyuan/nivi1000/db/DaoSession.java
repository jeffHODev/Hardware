package com.hekangyuan.nivi1000.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hekangyuan.nivi1000.model.dbbean.PatientCheckDataBean;
import com.hekangyuan.nivi1000.model.dbbean.PatientdbBean;
import com.hekangyuan.nivi1000.model.dbbean.WaveformBean;
import com.hekangyuan.nivi1000.model.Waveform_Bean;

import com.hekangyuan.nivi1000.db.PatientCheckDataBeanDao;
import com.hekangyuan.nivi1000.db.PatientdbBeanDao;
import com.hekangyuan.nivi1000.db.WaveformBeanDao;
import com.hekangyuan.nivi1000.db.Waveform_BeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig patientCheckDataBeanDaoConfig;
    private final DaoConfig patientdbBeanDaoConfig;
    private final DaoConfig waveformBeanDaoConfig;
    private final DaoConfig waveform_BeanDaoConfig;

    private final PatientCheckDataBeanDao patientCheckDataBeanDao;
    private final PatientdbBeanDao patientdbBeanDao;
    private final WaveformBeanDao waveformBeanDao;
    private final Waveform_BeanDao waveform_BeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        patientCheckDataBeanDaoConfig = daoConfigMap.get(PatientCheckDataBeanDao.class).clone();
        patientCheckDataBeanDaoConfig.initIdentityScope(type);

        patientdbBeanDaoConfig = daoConfigMap.get(PatientdbBeanDao.class).clone();
        patientdbBeanDaoConfig.initIdentityScope(type);

        waveformBeanDaoConfig = daoConfigMap.get(WaveformBeanDao.class).clone();
        waveformBeanDaoConfig.initIdentityScope(type);

        waveform_BeanDaoConfig = daoConfigMap.get(Waveform_BeanDao.class).clone();
        waveform_BeanDaoConfig.initIdentityScope(type);

        patientCheckDataBeanDao = new PatientCheckDataBeanDao(patientCheckDataBeanDaoConfig, this);
        patientdbBeanDao = new PatientdbBeanDao(patientdbBeanDaoConfig, this);
        waveformBeanDao = new WaveformBeanDao(waveformBeanDaoConfig, this);
        waveform_BeanDao = new Waveform_BeanDao(waveform_BeanDaoConfig, this);

        registerDao(PatientCheckDataBean.class, patientCheckDataBeanDao);
        registerDao(PatientdbBean.class, patientdbBeanDao);
        registerDao(WaveformBean.class, waveformBeanDao);
        registerDao(Waveform_Bean.class, waveform_BeanDao);
    }
    
    public void clear() {
        patientCheckDataBeanDaoConfig.clearIdentityScope();
        patientdbBeanDaoConfig.clearIdentityScope();
        waveformBeanDaoConfig.clearIdentityScope();
        waveform_BeanDaoConfig.clearIdentityScope();
    }

    public PatientCheckDataBeanDao getPatientCheckDataBeanDao() {
        return patientCheckDataBeanDao;
    }

    public PatientdbBeanDao getPatientdbBeanDao() {
        return patientdbBeanDao;
    }

    public WaveformBeanDao getWaveformBeanDao() {
        return waveformBeanDao;
    }

    public Waveform_BeanDao getWaveform_BeanDao() {
        return waveform_BeanDao;
    }

}
