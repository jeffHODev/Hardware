<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengde.nivi.modules.patient.dao.PatientMapper" >
  <resultMap id="BaseResultMap" type="com.hengde.nivi.modules.patient.entity.Patient" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="case_no" property="caseNo" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="unique_id" property="uniqueId" jdbcType="CHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, case_no, nationality, address, phone, birthday, sex, name, unique_id,
    create_date, del_flag
  </sql>

  <!-- 根据身份证号获取患者详细信息 -->
  <select id="getPatientInfo" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from patient
    where unique_id = #{uniqueID,jdbcType=VARCHAR} and del_flag = 0
  </select>

  <!-- 根据患者姓名、手机号获取患者基本信息 -->
  <select id="getPatientInfoByNP" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from patient
    where name = #{name,jdbcType=VARCHAR} and phone = #{phone,jdbcType=VARCHAR} and del_flag = 0
  </select>

  <!-- 快速查询页面根据身份证号 -->
  <select id="getPatientByUniqueId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from patient
    where unique_id = #{uniqueId,jdbcType=VARCHAR} and del_flag = 0
  </select>

  <!-- 根据医院id分页获取所有患者列表 -->
  <select id="getPatientList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from patient
    where id in (select patient_id from basis_measurement where device_id = #{deviceId} and del_flag = 0)
    order by create_date desc
    LIMIT #{pageNo},#{pageSize}
  </select>

  <!-- 根据医院id获取所有患者列表的数据总条数 -->
  <select id="getPatientListCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select count(*)
    from patient
    where id in (select patient_id from basis_measurement where device_id = #{deviceId} and del_flag = 0)
  </select>

  <!-- 根据患者id查询患者基本信息 -->
  <select id="selectPatientById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from patient
    where id = #{id,jdbcType=VARCHAR} and del_flag = 0
  </select>

  <!-- 根据表名和该表主键id获取最新版本号 -->
  <select id="selectVersionByTimeIdName" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    version
    from update_event
    where object_type = #{objectType,jdbcType=VARCHAR} and object_id = #{objectId,jdbcType=VARCHAR}
    order by update_time desc limit 1
  </select>

  <!-- 获取患者历史检测记录数据列表 -->
  <select id="getHistoryPatientlist" resultType="java.util.HashMap" parameterType="java.util.Map" >
    select
    p.id,p.name,DATE_FORMAT(b.diag_date, '%Y-%c-%d %H:%i:%s' ) as diagDate
    from patient p,basis_measurement b,original_waveform o
    where p.id = b.patient_id and b.id = o.basis_measurement_id and b.device_id = #{deviceId}
    order by b.diag_date desc
    LIMIT #{pageNo},#{pageSize}
  </select>

  <!-- 获取患者历史检测记录数据列表对应数据总条数 -->
  <select id="getHistoryPatientListCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    count(*)
    from patient p,basis_measurement b,original_waveform o
    where p.id = b.patient_id and b.id = o.basis_measurement_id and b.device_id = #{deviceId}
  </select>

  <!-- 根据患者id获取对应历史检测记录 -->
  <select id="getPatientHistorylist" resultType="java.util.HashMap" parameterType="java.util.Map" >
    select
    id as basisMeasurementId,diag_date as diagDate
    from basis_measurement
    where patient_id = #{patientId} and device_id = #{deviceId} and del_flag = 0
    ORDER BY diag_date desc
  </select>

  <!-- 根据手机号查询对应患者 -->
  <select id="getPatientInfoByPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
    from patient
    where phone = #{phone} and del_flag = 0
  </select>

  <!-- 根据身份证号查询对应患者 -->
  <select id="getPatientInfoByUniqueId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
    from patient
    where unique_id = #{uniqueId} and del_flag = 0
  </select>

  <!-- 排除当前数据查询患者基本信息 -->
  <select id="getPatientInfoByNPNotId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select <include refid="Base_Column_List" />
    from patient
    where name = #{name} and phone = #{phone} and id != #{id} and del_flag = 0
  </select>

  <!-- 排除当前数据根据手机号查询患者基本信息 -->
  <select id="getPatientInfoByPhoneNotId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select <include refid="Base_Column_List" />
    from patient
    where phone = #{phone} and id != #{id} and del_flag = 0
  </select>

  <!-- 排除当前数据根据身份证号查询患者基本信息 -->
  <select id="getPatientInfoByUniqueIdNotId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select <include refid="Base_Column_List" />
    from patient
    where unique_id = #{uniqueId} and id != #{id} and del_flag = 0
  </select>

  <!-- 根据id修改患者基本信息 -->
  <update id="updatePatient" parameterType="com.hengde.nivi.modules.patient.entity.Patient" >
    update patient
    <set >
      <if test="caseNo != null" >
        case_no = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uniqueId != null" >
        unique_id = #{uniqueId,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 添加更新记录 -->
  <insert id="addUpdateEvent" parameterType="java.util.Map" >
    insert into update_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="version != null" >
        version,
      </if>
      <if test="objectType != null" >
        object_type,
      </if>
      <if test="objectId != null" >
        object_id,
      </if>
      <if test="fieldName != null" >
        field_name,
      </if>
      <if test="fieldOldValue != null" >
        field_old_value,
      </if>
      <if test="fieldNewValue != null" >
        field_new_value,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="objectType != null" >
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null" >
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null" >
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="fieldOldValue != null" >
        #{fieldOldValue,jdbcType=VARCHAR},
      </if>
      <if test="fieldNewValue != null" >
        #{fieldNewValue,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>




  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from patient
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from patient
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hengde.nivi.modules.patient.entity.Patient" >
    insert into patient (id, case_no, nationality, 
      address, phone, birthday, 
      sex, name, unique_id,
      create_date, del_flag)
    values (#{id,jdbcType=VARCHAR}, #{caseNo,jdbcType=VARCHAR}, #{nationality,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{uniqueId,jdbcType=CHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hengde.nivi.modules.patient.entity.Patient" >
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="caseNo != null" >
        case_no,
      </if>
      <if test="nationality != null" >
        nationality,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="uniqueId != null" >
        unique_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null" >
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uniqueId != null" >
        #{uniqueId,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengde.nivi.modules.patient.entity.Patient" >
    update patient
    <set >
      <if test="caseNo != null" >
        case_no = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uniqueId != null" >
        unique_id = #{uniqueId,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengde.nivi.modules.patient.entity.Patient" >
    update patient
    set case_no = #{caseNo,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      unique_id = #{uniqueId,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>